{"version":3,"sources":["components/conventional/input/AuthInput.jsx","assets/global/logo-name.svg","assets/pages/signIn/key.svg","assets/pages/signIn/mail.svg","assets/pages/signIn/google.svg","assets/pages/signIn/girl.png","assets/pages/signIn/user.svg","pages/signUp/SignUp.jsx"],"names":["memo","placeholder","type","name","id","img","value","label","handleChange","handleBlur","className","onChange","onBlur","src","alt","module","exports","SignUp","dispatch","useDispatch","isLoading","useSelector","state","auth","isGoogleLoading","googleLink","signUpErr","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","matches","min","onSubmit","values","reqSignUpStart","handleGoogleAuth","useCallback","reqGoogleAuthStart","SIGN_UP","key","user","mail","window","location","href","logo","handleSubmit","noValidate","map","field","touched","errors","variant","disabled","handleOnClick","googleIcon","target","to","girlImg"],"mappings":"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","file":"static/js/SignUp.55c112d0.chunk.js","sourcesContent":["import React, { memo } from \"react\";\n\nimport \"./Input.scss\";\n\nconst AuthInput = ({ placeholder, type = \"text\", name, id, img, label, value, handleChange, handleBlur }) => {\n    return (\n        <div className=\"input-component\">\n            <input\n                type={type}\n                placeholder={placeholder}\n                name={name}\n                id={id}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            <img src={img} alt=\"key\" />\n        </div>\n    );\n};\n\nexport default memo(AuthInput);\n","module.exports = __webpack_public_path__ + \"static/media/logo-name.b6ca986b.svg\";","module.exports = __webpack_public_path__ + \"static/media/key.e1a6521a.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.5f803e62.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.3cf21d79.svg\";","module.exports = __webpack_public_path__ + \"static/media/girl.e9c186a2.png\";","module.exports = __webpack_public_path__ + \"static/media/user.f7fb1401.svg\";","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthInput from \"@/components/conventional/input/AuthInput\";\nimport Button from \"@/components/conventional/button/Button\";\nimport Spinner from \"@/components/conventional/spinner/Spinner\";\n\nimport logo from \"@/assets/global/logo-name.svg\";\n\nimport girlImg from \"@/assets/pages/signIn/girl.png\";\nimport key from \"@/assets/pages/signIn/key.svg\";\nimport mail from \"@/assets/pages/signIn/mail.svg\";\nimport user from \"@/assets/pages/signIn/user.svg\";\nimport googleIcon from \"@/assets/pages/signIn/google.svg\";\n\nimport \"./SignUp.scss\";\n\nimport { reqSignUpStart, reqGoogleAuthStart } from \"@/store/global/slice/AuthSlice\";\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n\n    const { isLoading } = useSelector((state) => state.auth);\n    const { isGoogleLoading } = useSelector((state) => state.auth);\n    const { googleLink } = useSelector((state) => state.auth);\n    const { signUpErr } = useSelector((state) => state.auth);\n\n    //-----------------------------------------------------------------\n    //Form state management with formik (START)\n    //-----------------------------------------------------------------\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        },\n        validationSchema: Yup.object({\n            name: Yup.string().required(\"Required\").matches(/\\s/, \"Name must contain firstname and lastname\"),\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n            password: Yup.string()\n                .required(\"No password provided.\")\n                .min(6, \"Password is too short - should be 6 chars minimum.\")\n                .matches(/[a-zA-Z]/, \"Password can only contain letters.\")\n        }),\n        onSubmit: (values) => {\n            dispatch(reqSignUpStart(values));\n        }\n    });\n    //-----------------------------------------------------------------\n    //Form state management with formik (END)\n    //-----------------------------------------------------------------\n\n    const handleGoogleAuth = useCallback(() => {\n        dispatch(reqGoogleAuthStart());\n    }, [dispatch]);\n\n    const SIGN_UP = [\n        {\n            key: 1,\n            name: \"name\",\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Name\",\n            img: user,\n            value: formik.values.name\n        },\n        {\n            key: 2,\n            name: \"email\",\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            img: mail,\n            value: formik.values.email\n        },\n        {\n            key: 3,\n            name: \"password\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            img: key,\n            value: formik.values.password\n        }\n    ];\n\n    if (googleLink) {\n        window.location.href = `${googleLink}`;\n        return null;\n    }\n\n    return (\n        <div id=\"signup-page\">\n            <div className=\"left-column\">\n                <section>\n                    <div className=\"logo-wrapper\">\n                        <img src={logo} alt=\"logo\" />\n                    </div>\n                </section>\n                <section>\n                    <form className=\"form\" onSubmit={formik.handleSubmit} noValidate>\n                        {SIGN_UP.map((field) => {\n                            const { key, name } = field;\n                            return (\n                                <div className=\"input-wrapper\">\n                                    <AuthInput\n                                        key={key}\n                                        {...field}\n                                        handleChange={formik.handleChange}\n                                        handleBlur={formik.handleBlur}\n                                    />\n                                    {formik.touched[name] && formik.errors[name] ? (\n                                        <div className=\"error-message\">{formik.errors[name]}</div>\n                                    ) : null}\n                                </div>\n                            );\n                        })}\n                        <Button type=\"submit\" variant=\"\" disabled={isLoading}>\n                            {isLoading ? <Spinner /> : \"\"}\n                            <span>Sign Up</span>\n                        </Button>\n                        {signUpErr && <h5 className=\"response-error-message\">{signUpErr}</h5>}\n                    </form>\n                    <div className=\"divider\">\n                        <span className=\"text\">or</span>\n                        <span className=\"line\"></span>\n                    </div>\n                    <div className=\"google-auth\">\n                        <Button type=\"text\" handleOnClick={handleGoogleAuth} disabled={isGoogleLoading}>\n                            {isGoogleLoading ? <Spinner /> : \"\"}\n                            <span className=\"title\">Sign Up with Google</span>\n                            <span className=\"google-icon-wrapper\">\n                                <img src={googleIcon} alt=\"google\" />\n                            </span>\n                        </Button>\n                    </div>\n                    <p className=\"terms-conditions\">\n                        By registering you agree to our{\" \"}\n                        <a href=\"https://www.prodeus.co/terms-conditions\" target=\"_blank\">\n                            Terms &amp; Conditions\n                        </a>\n                    </p>\n                    <div className=\"enquiry\">\n                        Already a member? <Link to=\"/\">Login</Link>\n                    </div>\n                </section>\n            </div>\n            <div className=\"right-column\">\n                <h1>\n                    Create an <br /> account\n                </h1>\n\n                <img src={girlImg} alt=\"welcome\" />\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}