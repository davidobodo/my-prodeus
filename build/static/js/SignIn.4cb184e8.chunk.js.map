{"version":3,"sources":["components/conventional/input/AuthInput.jsx","assets/global/logo-name.svg","assets/pages/signIn/key.svg","assets/pages/signIn/mail.svg","assets/pages/signIn/google.svg","assets/pages/signIn/boy.png","pages/signIn/SignIn.jsx"],"names":["memo","placeholder","type","name","id","img","value","label","handleChange","handleBlur","className","onChange","onBlur","src","alt","module","exports","SignIn","dispatch","useDispatch","isLoading","useSelector","state","auth","isGoogleLoading","googleLink","signInErr","urlToken","URLSearchParams","useLocation","search","get","reqGetUserFromTokenStart","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","matches","onSubmit","values","reqSignInStart","handleGoogleAuth","useCallback","reqGoogleAuthStart","SIGN_IN","key","mail","window","location","href","logo","handleSubmit","noValidate","map","field","touched","errors","variant","disabled","handleOnClick","googleIcon","target","to","boyImg"],"mappings":"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","file":"static/js/SignIn.4cb184e8.chunk.js","sourcesContent":["import React, { memo } from \"react\";\n\nimport \"./Input.scss\";\n\nconst AuthInput = ({ placeholder, type = \"text\", name, id, img, label, value, handleChange, handleBlur }) => {\n    return (\n        <div className=\"input-component\">\n            <input\n                type={type}\n                placeholder={placeholder}\n                name={name}\n                id={id}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            <img src={img} alt=\"key\" />\n        </div>\n    );\n};\n\nexport default memo(AuthInput);\n","module.exports = __webpack_public_path__ + \"static/media/logo-name.b6ca986b.svg\";","module.exports = __webpack_public_path__ + \"static/media/key.e1a6521a.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.5f803e62.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.3cf21d79.svg\";","module.exports = __webpack_public_path__ + \"static/media/boy.81fbcab6.png\";","import React, { useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthInput from \"@/components/conventional/input/AuthInput\";\nimport Button from \"@/components/conventional/button/Button\";\nimport Spinner from \"@/components/conventional/spinner/Spinner\";\n\nimport logo from \"@/assets/global/logo-name.svg\";\n\nimport boyImg from \"@/assets/pages/signIn/boy.png\";\nimport key from \"@/assets/pages/signIn/key.svg\";\nimport mail from \"@/assets/pages/signIn/mail.svg\";\nimport googleIcon from \"@/assets/pages/signIn/google.svg\";\n\nimport { reqSignInStart, reqGoogleAuthStart, reqGetUserFromTokenStart } from \"@/store/global/slice/AuthSlice\";\n\nimport \"./SignIn.scss\";\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst SignIn = () => {\n    const dispatch = useDispatch();\n\n    const { isLoading } = useSelector((state) => state.auth);\n    const { isGoogleLoading } = useSelector((state) => state.auth);\n    const { googleLink } = useSelector((state) => state.auth);\n    const { signInErr } = useSelector((state) => state.auth);\n\n    const urlToken = useQuery().get(\"token\");\n\n    if (urlToken) {\n        dispatch(reqGetUserFromTokenStart(urlToken));\n    }\n    //-----------------------------------------------------------------\n    //Form state management with formik (START)\n    //-----------------------------------------------------------------\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\"\n        },\n        validationSchema: Yup.object({\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n            password: Yup.string()\n                .required(\"Password provided.\")\n                .min(6, \"Password is too short - should be 6 chars minimum.\")\n                .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\n        }),\n        onSubmit: (values) => {\n            dispatch(reqSignInStart(values));\n        }\n    });\n\n    const handleGoogleAuth = useCallback(() => {\n        dispatch(reqGoogleAuthStart());\n    }, [dispatch]);\n\n    const SIGN_IN = [\n        {\n            key: 1,\n            name: \"email\",\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            img: mail,\n            value: formik.values.email\n        },\n        {\n            key: 2,\n            name: \"password\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            img: key,\n            value: formik.values.password\n        }\n    ];\n\n    if (googleLink) {\n        window.location.href = `${googleLink}`;\n        return null;\n    }\n\n    return (\n        <div id=\"signin-page\">\n            <div className=\"left-column\">\n                <section>\n                    <div className=\"logo-wrapper\">\n                        <img src={logo} alt=\"logo\" />\n                    </div>\n                </section>\n                <section>\n                    <form className=\"form\" onSubmit={formik.handleSubmit} noValidate>\n                        {SIGN_IN.map((field) => {\n                            const { key, name } = field;\n                            return (\n                                <div className=\"input-wrapper\" key={key}>\n                                    <AuthInput\n                                        {...field}\n                                        handleChange={formik.handleChange}\n                                        handleBlur={formik.handleBlur}\n                                    />\n                                    {formik.touched[name] && formik.errors[name] ? (\n                                        <div className=\"error-message\">{formik.errors[name]}</div>\n                                    ) : null}\n                                </div>\n                            );\n                        })}\n                        <Button type=\"submit\" variant=\"\" disabled={isLoading}>\n                            {isLoading ? <Spinner /> : \"\"}\n                            <span>Sign In</span>\n                        </Button>\n                        {signInErr && <h5 className=\"response-error-message\">{signInErr}</h5>}\n                    </form>\n                    <div className=\"divider\">\n                        <span className=\"text\">or</span>\n                        <span className=\"line\"></span>\n                    </div>\n                    <div className=\"google-auth\">\n                        <Button type=\"button\" handleOnClick={handleGoogleAuth} disabled={isGoogleLoading}>\n                            {isGoogleLoading ? <Spinner /> : \"\"}\n                            <span className=\"title\">Sign In with Google</span>\n                            <span className=\"google-icon-wrapper\">\n                                <img src={googleIcon} alt=\"google\" />\n                            </span>\n                        </Button>\n                    </div>\n                    <p className=\"terms-conditions\">\n                        By registering you agree to our{\" \"}\n                        <a href=\"https://www.prodeus.co/terms-conditions\" target=\"_blank\">\n                            Terms &amp; Conditions\n                        </a>\n                    </p>\n                    <div className=\"enquiry\">\n                        Not a member? <Link to=\"/signup\">Sign Up</Link>\n                    </div>\n                </section>\n            </div>\n            <div className=\"right-column\">\n                <h1>\n                    Welcome <br /> back.\n                </h1>\n\n                <img src={boyImg} alt=\"welcome\" />\n            </div>\n        </div>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}