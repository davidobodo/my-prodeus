{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","assets/pages/addClassPage/class-img.png","assets/pages/addClassPage/plus.svg","pages/addClassPage/AddClassPage.jsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","module","exports","Page","history","useHistory","CATEGORY_OPTIONS","categoryDropdownOptions","useState","isLoading","setIsLoading","userToken","useSelector","state","auth","formik","useFormik","initialValues","url","title","description","category","topics","difficulty","youtubeId","duration","instructor","instructorImage","validationSchema","Yup","required","matches","onSubmit","values","handleRequestAddClass","language","youtubeID","handleSubmit","handleChange","touched","errors","handleBlur","setFieldValue","handleExtractYoutubeVideoId","useCallback","match","length","handleGetVideoInfo","a","handleFetchYoutubeVideoContent","videoInfo","axios","get","YOUTUBE_API_URL","process","data","items","console","log","youtubeData","snippet","contentDetails","hours","moment","minutes","seconds","time","id","image","channelTitle","thumbnails","default","body","post","BASE_URL","headers","Authorization","res","details","push","pathname","catch","useEffect","test","className","noValidate","type","placeholder","name","onChange","onBlur","htmlFor","cols","rows","options","TOPICS","DIFFICULTY_OPTIONS","disabled","src","plusIcon","alt","style","backgroundImage"],"mappings":"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","file":"static/js/AddClassPage.fe92f958.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = __webpack_public_path__ + \"static/media/class-img.68eeb6bd.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.fd2afe7c.svg\";","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Button from \"@/components/conventional/button/Button\";\nimport SimpleDropdown from \"@/components/conventional/dropdown/SimpleDropdown\";\nimport MultipleSelectionDropdownPlusIcon from \"@/components/conventional/dropdown/MultipleSelectionDropdownPlusIcon\";\nimport Spinner from \"@/components/conventional/spinner/Spinner\";\n\nimport image from \"@/assets/pages/addClassPage/class-img.png\";\nimport plusIcon from \"@/assets/pages/addClassPage/plus.svg\";\n\nimport { YOUTUBE_API_URL, BASE_URL } from \"@/utils/Url\";\n\nimport { DIFFICULTY_OPTIONS, TOPICS } from \"@/utils/Constants\";\nimport { categoryDropdownOptions } from \"@/utils/Utils\";\n\nimport \"./AddClassPage.scss\";\n\nconst Page = () => {\n    const history = useHistory();\n\n    const CATEGORY_OPTIONS = categoryDropdownOptions();\n    //To show loading spinner\n    const [isLoading, setIsLoading] = useState(false);\n\n    const userToken = useSelector((state) => state.auth.userToken);\n\n    //---------------------------------------------------------------------\n    //Form state manaagement, validations and submitting handled by Formik\n    //---------------------------------------------------------------------\n    const formik = useFormik({\n        initialValues: {\n            url: \"\",\n            title: \"\",\n            description: \"\",\n            category: \"\",\n            topics: [],\n            difficulty: \"\",\n            youtubeId: \"\",\n            duration: \"\",\n            instructor: \"\",\n            instructorImage: \"\"\n        },\n        validationSchema: Yup.object({\n            url: Yup.string()\n                .required(\"Required\")\n                .matches(/^(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.?be)\\/.+$/, \"Must be a youtube link\"),\n            topics: Yup.string().required(\"Select at least one topic\"),\n            category: Yup.string().required(\"Required\"),\n            difficulty: Yup.string().required(\"Required\")\n        }),\n        onSubmit: (values) => {\n            const {\n                title,\n                description,\n                category,\n                topics,\n                difficulty,\n                youtubeId,\n                duration,\n                instructor,\n                instructorImage\n            } = values;\n            const details = {\n                title,\n                description,\n                duration,\n                category,\n                difficulty,\n                language: \"English\",\n                youtubeID: youtubeId,\n                topics,\n                instructor,\n                instructorImage\n            };\n            handleRequestAddClass(details);\n        }\n    });\n    const { values, handleSubmit, handleChange, touched, errors, handleBlur, setFieldValue } = formik; //extract useful properties and methods from formik\n\n    //---------------------------------------------------------------------\n    //Helper Functions\n    //---------------------------------------------------------------------\n    //Extract the video Id from the youtube video link\n    const handleExtractYoutubeVideoId = useCallback((url) => {\n        const regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n        const match = url.match(regExp);\n        return match && match[1].length == 11 ? match[1] : false;\n    }, []);\n\n    const handleGetVideoInfo = useCallback(\n        async (url) => {\n            const youtubeId = handleExtractYoutubeVideoId(url);\n            const videoInfo = await handleFetchYoutubeVideoContent(youtubeId);\n            setFieldValue(\"youtubeId\", youtubeId, false); //false indicates do not fire any validation\n            setFieldValue(\"duration\", videoInfo.duration, false);\n            setFieldValue(\"title\", videoInfo.title, false);\n            setFieldValue(\"description\", videoInfo.description, false);\n            setFieldValue(\"instructor\", videoInfo.instructor, false);\n            setFieldValue(\"instructorImage\", videoInfo.instructorImage, false);\n        },\n        [handleExtractYoutubeVideoId, setFieldValue]\n    );\n\n    //---------------------------------------------------------------------\n    //Network Requests\n    //---------------------------------------------------------------------\n    //Get all info about youtube video from videos Id\n    async function handleFetchYoutubeVideoContent(youtubeId) {\n        const { data } = await axios.get(\n            `${YOUTUBE_API_URL}?id=${youtubeId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}&part=contentDetails,snippet`\n        );\n\n        if (!data.items.length) {\n            console.log(\"\\n\\n\\n\\n\\n\\n undefined data \\n\\n\\n\\n\\n\\n\");\n            return \"remove\";\n        }\n\n        const youtubeData = data.items[0].snippet;\n        const duration = data.items[0].contentDetails.duration;\n        const hours = moment.duration(duration).hours();\n        const minutes = moment.duration(duration).minutes();\n        const seconds = moment.duration(duration).seconds();\n        const time = hours > 0 ? `${hours}hrs ${minutes}m` : `${minutes}m ${seconds}s`;\n\n        return {\n            id: youtubeId,\n            title: youtubeData.title,\n            description: youtubeData.description,\n            image: `https://i.ytimg.com/vi/${youtubeId}/hqdefault.jpg`,\n            duration: time,\n            instructor: youtubeData.channelTitle,\n            instructorImage: youtubeData.thumbnails.default.url\n        };\n    }\n\n    //Network request to add class (This request is made here cause its response has no \"direct\" effect on the global state)\n    const handleRequestAddClass = (body) => {\n        setIsLoading(true);\n        axios\n            .post(`${BASE_URL}/class/add`, body, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${userToken}`\n                }\n            })\n            .then((res) => {\n                setIsLoading(false);\n                console.log(res);\n                const details = res.data;\n                history.push({ pathname: \"/library-class\", state: { details } });\n            })\n            .catch((err) => {\n                setIsLoading(false);\n                console.log(err);\n            });\n    };\n\n    //---------------------------------------------------------------------\n    //UseEffects\n    //---------------------------------------------------------------------\n    //Make sure its a valid youtube link being put into the url field before performing any youtube related action\n    useEffect(() => {\n        const youtubeRegex = /^(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.?be)\\/.+$/;\n        if (values.url && errors.url !== true && youtubeRegex.test(values.url)) {\n            handleGetVideoInfo(`${values.url}`);\n        }\n    }, [values.url, errors.url, handleGetVideoInfo]);\n\n    const dropdownOptionsGenerator = () => {};\n\n    useEffect(() => {}, []);\n\n    return (\n        <div id=\"add-class-page\">\n            <div className=\"add-class-page\">\n                <div className=\"add-class-page__left-column\">\n                    <h1 className=\"add-class-page__left-column__header\">Add Class</h1>\n                    <form noValidate onSubmit={handleSubmit}>\n                        <div className=\"input-wrapper\">\n                            <div className=\"add-class-page__input-component\">\n                                <label className=\"add-class-page__input-component__label\">URL</label>\n                                <div className=\"add-class-page__input-component__input\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Youtube URL\"\n                                        name=\"url\"\n                                        id=\"url\"\n                                        value={values.url}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                </div>\n                                {touched.url && errors.url ? (\n                                    <div className=\"input-error-message\">{errors.url}</div>\n                                ) : null}\n                            </div>\n                        </div>\n\n                        <div className=\"input-wrapper\">\n                            <div className=\"add-class-page__input-component\">\n                                <label className=\"add-class-page__input-component__label\">TITLE</label>\n                                <div className=\"add-class-page__input-component__input\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Class Title\"\n                                        name=\"title\"\n                                        id=\"title\"\n                                        value={values.title}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"textarea-wrapper\">\n                            <div className=\"add-class-page__textarea-component\">\n                                <label htmlFor=\"\">Description</label>\n                                <textarea\n                                    name=\"\"\n                                    id=\"\"\n                                    cols=\"\"\n                                    rows=\"\"\n                                    placeholder=\"Write a description\"\n                                    value={values.description}\n                                ></textarea>\n                            </div>\n                        </div>\n\n                        <div className=\"dropdown-wrapper\">\n                            <h6>Category</h6>\n                            <SimpleDropdown\n                                placeholder=\"Select Category\"\n                                value={values.category}\n                                options={CATEGORY_OPTIONS}\n                                handleChange={(value) => setFieldValue(\"category\", value)}\n                                name=\"category\"\n                            />\n                            {touched.category && errors.category ? (\n                                <div className=\"input-error-message\">{errors.category}</div>\n                            ) : null}\n                        </div>\n\n                        <div className=\"dropdown-wrapper\">\n                            <h6>Topics</h6>\n                            <MultipleSelectionDropdownPlusIcon\n                                value={values.topics}\n                                options={TOPICS}\n                                handleChange={(value) => setFieldValue(\"topics\", value)}\n                                name=\"topics\"\n                                placeholder=\"Add Topics...\"\n                            />\n                            {touched.topics && errors.topics ? (\n                                <div className=\"input-error-message\">{errors.topics}</div>\n                            ) : null}\n                        </div>\n\n                        <div className=\"dropdown-wrapper\">\n                            <h6>Difficulty</h6>\n                            <SimpleDropdown\n                                placeholder=\"Select Difficulty\"\n                                value={values.difficulty}\n                                options={DIFFICULTY_OPTIONS}\n                                handleChange={(value) => setFieldValue(\"difficulty\", value)}\n                                name=\"difficulty\"\n                            />\n                            {touched.difficulty && errors.difficulty ? (\n                                <div className=\"input-error-message\">{errors.difficulty}</div>\n                            ) : null}\n                        </div>\n\n                        <Button type=\"submit\" disabled={isLoading}>\n                            {isLoading ? (\n                                <>\n                                    <Spinner />\n                                    Adding Class...\n                                </>\n                            ) : (\n                                <>\n                                    <span className=\"icon-wrapper\">\n                                        <img src={plusIcon} alt=\"+\" />\n                                    </span>\n                                    <span className=\"text\">Add Class</span>\n                                </>\n                            )}\n                        </Button>\n                    </form>\n                </div>\n                <div className=\"add-class-page__right-column\" style={{ backgroundImage: `url(${image})` }}></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Page;\n"],"sourceRoot":""}